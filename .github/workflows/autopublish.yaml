name: Publish on \# cheatsheet
on: 
  push:
    branches:
      - master
      - tmp
    paths:
      - 'text/**'
permissions: write-all
jobs:
  Publish-On-Cheatsheet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get all changed markdown files
        id: changed-markdown-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46
        with:
          files: text/**.txt

      - name: List all changed files markdown files
        if: steps.changed-markdown-files.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-markdown-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

      - name: Assert cheathsheet name is not empty
        if: steps.extract_name.outputs.cheathsheet == ''
        run: exit 1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      #- name: Install dependencies
      #  run: pip install any-package-you-need


      - name: Create ANSI directory
        run: |
          mkdir -p "ansi/${{ steps.extract_name.outputs.cheathsheet }}"
          touch "ansi/${{ steps.extract_name.outputs.cheathsheet }}/.gitkeep"

      - name: Commit and push generated ANSI files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add "ansi/${{ steps.extract_name.outputs.chapter_name }}"
          git commit -m "Auto-generated ANSI files for ${{ steps.extract_name.outputs.chapter_name }}"
          git push

      - name: Extract event data
        id: event-data
        uses: actions/github-script@v6
        with:
          script: |
            const eventData = {
              ref: context.ref,
              repository: context.repo
            }
            return JSON.stringify(eventData)
      - name: Post Cheatsheet on Discord
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'http://localhost:8000/cheatsheet/action'
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json", "X-API-Key": "secret"}'
          data: ${{ steps.event-data.outputs.result }}
          timeout: 15000
